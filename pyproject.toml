# The .toml file is not only for uv, but it's an integral part of how uv operates


[project]
name = "chalkland"          # Package name (for identification and installation)
version = "0.1.0"               # Package version
description = "Add your description here"
# authors = [{ name = "chalkjuice", email = "joelday.business@gmail.com" }]
# license = { text = "MIT" }
readme = "README.md"            # Path to your project's README file
requires-python = ">=3.10"      # Minimum Python version required

dependencies = [
    "boto3==1.34.75",           # AWS SDK for Python (interacts with AWS services)
    "ipykernel==6.29.5",        # Jupyter kernel support (to run notebooks)
    "pip==25.0",                # Ensures a minimum pip version
    "pydantic==2.10.6",         # Data validation and serialization library
    "python-dotenv==1.1.0",     # Loads environment variables from `.env` files
    "numpy==1.24.0",            # Core package for numerical computations
    "pandas==1.5.3",            # Data analysis and manipulation library
    "pymongo==4.11.3",          # MongoDB driver for synchronous access
    "scikit-learn==1.1.3",      # Machine learning library
    "plotly==5.10.0",           # Interactive graphing library
    "matplotlib==3.6.0",        # Plotting library for static, animated, and interactive visualizations
    "seaborn==0.11.2",          # Statistical data visualization library
    "pytest==7.2.2"             # Testing framework for Python
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
# Tell Hatchling to include the models package from the src/ directory
include = ["packages/*"]


[tool.uv]
# manage the environment like a package rather than a standalone virtual environment
package = true




# defines a monorepo-style workspace
# runs all pyproject.toml files inside those folders
[tool.uv.workspace]
members = ["packages/*"]
exclude = ["notebooks", "data", "reports"]




# defines custom CLI (command-line interface) commands that can be run from the terminal
[project.scripts]
#models = "models.whisper_turbo_base_mlx:run_whisper"


# NOTES:
# uv sync only installs dependencies from the main pyproject.toml
# uv sync --all-packages installs everything - importaint for mono-repo
# uv automatically manages virtual environments, doesnt need to be in pyproject.toml